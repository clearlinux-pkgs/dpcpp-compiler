[package]
name = dpcpp-compiler
url = https://github.com/intel/llvm/archive/nightly-2023-08-31/llvm-nightly-2023-08-31.tar.gz
archives = https://github.com/KhronosGroup/OpenCL-Headers/archive/v2023.04.17/opencl-headers-2023.04.17.tar.gz ../opencl-headers https://github.com/KhronosGroup/OpenCL-ICD-Loader/archive/v2023.04.17/opencl-icd-loader-2023.04.17.tar.gz ../ocl-icd-src https://github.com/boostorg/assert/archive/boost-1.83.0/assert-boost-1.83.0.tar.gz ../boost_assert https://github.com/boostorg/config/archive/boost-1.83.0/config-boost-1.83.0.tar.gz ../boost_config https://github.com/boostorg/container_hash/archive/boost-1.83.0/container_hash-boost-1.83.0.tar.gz ../boost_container_hash https://github.com/boostorg/core/archive/boost-1.83.0/core-boost-1.83.0.tar.gz ../boost_core https://github.com/boostorg/describe/archive/boost-1.83.0/describe-boost-1.83.0.tar.gz ../boost_describe https://github.com/boostorg/move/archive/boost-1.83.0/move-boost-1.83.0.tar.gz ../boost_move https://github.com/boostorg/predef/archive/boost-1.83.0/predef-boost-1.83.0.tar.gz ../boost_predef https://github.com/boostorg/preprocessor/archive/boost-1.83.0/preprocessor-boost-1.83.0.tar.gz ../boost_preprocessor https://github.com/boostorg/static_assert/archive/boost-1.83.0/static_assert-boost-1.83.0.tar.gz ../boost_static_assert https://github.com/boostorg/throw_exception/archive/boost-1.83.0/throw_exception-boost-1.83.0.tar.gz ../boost_throw_exception https://github.com/boostorg/tuple/archive/boost-1.83.0/tuple-boost-1.83.0.tar.gz ../boost_tuple https://github.com/boostorg/type_traits/archive/boost-1.83.0/type_traits-boost-1.83.0.tar.gz ../boost_type_traits https://github.com/boostorg/unordered/archive/boost-1.83.0/unordered-boost-1.83.0.tar.gz ../boost_unordered https://github.com/boostorg/mp11/archive/boost-1.83.0/mp11-boost-1.83.0.tar.gz ../boost_mp11 https://github.com/intel/vc-intrinsics/archive/v0.13.0/vc-intrinsics-0.13.0.tar.gz ../vc-intrinsics https://github.com/oneapi-src/unified-runtime/archive/weekly-2023-08-18/unified-runtime-weekly-2023-08-18.tar.gz ../unified-runtime
giturl = https://github.com/intel/llvm.git
domain = 
alias = 

[autospec]
# build 32 bit libraries
32bit = false
# allow package to build with test failures
allow_test_failures = false
# unset %build ld_as_needed variable
asneeded = false
# this package is trusted enough to automatically update (used by other tools)
autoupdate = false
# extend flags with '-std=gnu++98
broken_c++ = false
# disable parallelization during build
broken_parallel_build = false
# create vendor archive with cargo
cargo_vendor = false
# this package is a library compatibility package and only ships versioned library files
compat = false
# set conservative build flags
conservative_flags = false
# dev package requires the extras to be installed
dev_requires_extras = false
# pass -ffast-math to compiler
fast-math = false
# compile full (traditional) debug info
full-debug-info = false
# optimize build for speed over size
funroll-loops = false
# set flags to smallest -02 flags possible
insecure_build = false
# do not remove static libraries
keepstatic = false
# do not require autostart subpackage
no_autostart = false
# do not use the replacement pattern for file matching
no_glob = false
# do not generate debuginfo for this package
nodebug = false
# disable stripping binaries
nostrip = false
# configure build also for openmpi
openmpi = false
# optimize build for size over speed
optimize_size = false
# set profile for pgo
pgo = false
# set flags for security-sensitive builds
security_sensitive = false
# package is only used by servers
server = false
# do not run test suite
skip_tests = false
# add .so files to the lib package instead of dev
so_to_lib = false
# configure build for apx
use_apx = true
# configure build for avx2
use_avx2 = false
# configure build for avx512
use_avx512 = false
# add clang flags
use_clang = false
# configure build for lto
use_lto = true
# require package verification for build
verify_required = false

