From 17a53f4304463b8e7e639d57ef17479040a8a2ad Mon Sep 17 00:00:00 2001
From: Jinsong Ji <jinsong.ji@intel.com>
Date: Thu, 10 Aug 2023 14:41:52 +0000
Subject: [PATCH]  Guard removed typed pointer enum within version macro

Community has removed these typed pointer enum, guard them within
version macro to fix build error.
---
 GenXIntrinsics/lib/GenXIntrinsics/GenXIntrinsics.cpp | 6 ++++++
 1 file changed, 6 insertions(+)

diff --git a/GenXIntrinsics/lib/GenXIntrinsics/GenXIntrinsics.cpp b/GenXIntrinsics/lib/GenXIntrinsics/GenXIntrinsics.cpp
index 14701fa..e019682 100644
--- a/GenXIntrinsics/lib/GenXIntrinsics/GenXIntrinsics.cpp
+++ b/GenXIntrinsics/lib/GenXIntrinsics/GenXIntrinsics.cpp
@@ -97,8 +97,10 @@ enum IIT_Info {
   IIT_VARARG = 29,
   IIT_HALF_VEC_ARG = 30,
   IIT_SAME_VEC_WIDTH_ARG = 31,
+#if VC_INTR_LLVM_VERSION_MAJOR < 18
   IIT_PTR_TO_ARG = 32,
   IIT_PTR_TO_ELT = 33,
+#endif
   IIT_VEC_OF_ANYPTRS_TO_ELT = 34,
   IIT_I128 = 35,
   IIT_V512 = 36,
@@ -238,6 +240,7 @@ DecodeIITType(unsigned &NextElt, ArrayRef<unsigned char> Infos,
                                              ArgInfo));
     return;
   }
+#if VC_INTR_LLVM_VERSION_MAJOR < 18
   case IIT_PTR_TO_ARG: {
     unsigned ArgInfo = (NextElt == Infos.size() ? 0 : Infos[NextElt++]);
     OutputTable.push_back(IITDescriptor::get(IITDescriptor::PtrToArgument,
@@ -249,6 +252,7 @@ DecodeIITType(unsigned &NextElt, ArrayRef<unsigned char> Infos,
     OutputTable.push_back(IITDescriptor::get(IITDescriptor::PtrToElt, ArgInfo));
     return;
   }
+#endif
   case IIT_VEC_OF_ANYPTRS_TO_ELT: {
     unsigned short ArgNo = (NextElt == Infos.size() ? 0 : Infos[NextElt++]);
     unsigned short RefNo = (NextElt == Infos.size() ? 0 : Infos[NextElt++]);
@@ -337,6 +341,7 @@ static Type *DecodeFixedType(ArrayRef<Intrinsic::IITDescriptor> &Infos,
     }
     llvm_unreachable("unhandled");
   }
+#if VC_INTR_LLVM_VERSION_MAJOR < 18
   case IITDescriptor::PtrToArgument: {
     Type *Ty = Tys[D.getArgumentNumber()];
     return PointerType::getUnqual(Ty);
@@ -349,6 +354,7 @@ static Type *DecodeFixedType(ArrayRef<Intrinsic::IITDescriptor> &Infos,
     Type *EltTy = cast<VectorType>(VTy)->getElementType();
     return PointerType::getUnqual(EltTy);
   }
+#endif
   case IITDescriptor::VecOfAnyPtrsToElt:
     // Return the overloaded type (which determines the pointers address space)
     return Tys[D.getOverloadArgNumber()];
